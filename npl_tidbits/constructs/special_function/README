
Description:
============
This program illustrates how to use NPL's 'special function' construct and 
provides sandbox for experiments.

'special function' is used to connect a fixed function block with the rest of 
the NPL logic.
'sf_timestamping' program uses 'special function' to connect LINUX C function 
to get the time-of-day information for every packet and print the timestamp 
value on the BM console.

Contents:
=========
sf_timestamping
|-- npl
|   |-- sf_timestamping.npl (main program code)
|   |-- base_helper.npl   (support code that is needed for program to compile & execute)
|-- config.ini            (configuration file that can be used as-is)
|-- Makefile              
|-- bm_tests              (Scripts to support topology, packet crafting, packet send & receive)
    |-- corp_net
    |   |-- testPkt.py
    |-- sf_definition     (Special Function definition to interact with BMI* code)
        |-- bm_sfc.cpp


Compile & Run the program:
==========================
To compile 'sf_timestamping' program, run following commands from program directory:
   * make fe_nplsim
   * make nplsim_comp
At this point, all files needed to run NPL Behavior Model (BM) are generated.
There are two options to run 'sf_timestamping' program with NPL BM.
   1. If xterm is supported, just run: 
      *   make nplsim_run    (this is simple and easy way to run)
   2. If xterm is NOT supported then:  (manually running BM components)
      2a. Open two terminal windows and browse to 'sf_timestamping' program directory.
      2b. Terminal-1: Run 'sf_timestamping' program's Behavior Model:
          :> source ./ncsc-x.x.x/bin/setup.sh
          cd <npl_example>  
          :> ./fe_output/bmodel/bin/bmodel.sim
      2c. Terminal-2: Run Behavior Model CLI program.
          :> source ./ncsc-x.x.x/bin/setup.sh
          cd <npl_example>  
          :> python $BRCM_NCS_ROOT/ncsc-x.x.x/bmi/cli/bmif_cli.py --regfile ./fe_output/regfiles/nplsim_physical_regsfile.yml


Packet Test:
============
Default packet generation script included with the program does the following:
   * input : Sends 5 packets with interval of 1 sec for each packet.
     output: BM window prints out the timestamping of each packets based on the time of the system.

To run the test, open terminal and browse to 'sf_timestamping' program directory.
Run the following packet generation script included with the program.
   :> python bm_tests/corp_net/testPkt.py

*BMI: Behavior Model Infrastructure
